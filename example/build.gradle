buildscript {
    repositories {
        mavenCentral()
        maven{
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath(libs.springBootGradlePlugin)
        classpath(libs.springDependencyManagementPlugin)
        classpath 'com.github.fengshch:mybatis-flex-gradle-plugin:+'
//        classpath "org.postgresql:postgresql:42.7.1"
//        classpath 'com.mysql:mysql-connector-j:8.3.0'
        classpath(libs.h2)
//        classpath(libs.flywayMysql)
    }
}
plugins {
    id 'java'
}

apply {
    plugin 'com.github.fengshch.mybatis-flex-gradle-plugin'
    plugin('org.springframework.boot')
    plugin('io.spring.dependency-management')
}
group = 'example'
version = 'unspecified'
java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

//unGenerateTables = ['flyway_schema_history','CONSTANTS', 'ENUM_VALUES', 'INDEXES', 'INDEX_COLUMNS', "INFORMATION_SCHEMA_CATALOG_NAME",  "IN_DOUBT" , "LOCKS", "QUERY_STATISTICS" ,"RIGHTS", "ROLES", "SESSIONS", "SESSION_STATE", "SETTINGS", "SYNONYMS"  ]
mybatis {
    configurations {
        main {
            controllerGenerateEnable = true
            packageConfig {
                sourceDir = 'src/batis/java'
                basePackage = 'com.example.mybatis'
            }
            strategyConfig {
//                generateSchema="PUBLIC"
                unGenerateTables = ['flyway_schema_history']
//                unGenerateTables = ['flyway_schema_history','CONSTANTS', 'ENUM_VALUES', 'INDEXES', 'INDEX_COLUMNS', "INFORMATION_SCHEMA_CATALOG_NAME",  "IN_DOUBT" , "LOCKS", "QUERY_STATISTICS" ,"RIGHTS", "ROLES", "SESSIONS", "SESSION_STATE", "SETTINGS", "SYNONYMS"  ]
            }
            flyway {
                cleanDisabled = false
//                locations = ['classpath:db/migration']
//                locations = ['classpath:db/flyway']
            }
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation(libs.mybatisFlexSpringBootStarter) {
        exclude group: 'org.mybatis', module: 'mybatis-spring'
    }
    implementation(libs.mybatisSpring)

    implementation(libs.hikariCP)
    runtimeOnly(libs.h2)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor "org.projectlombok:lombok"
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

//tasks.named("bootRun").configure {
//    systemProperty("spring.profiles.active",findProperty("spring.profiles.active")?:'dev')
//}