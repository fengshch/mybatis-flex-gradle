/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details on writing Custom Plugins, please refer to https://docs.gradle.org/8.3/userguide/custom_plugins.html in the Gradle documentation.
 */

plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    id 'java-gradle-plugin'
    id 'maven-publish'
}

group GROUP
version VERSION

java {
    sourceCompatibility = '21'
}


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    gradlePluginPortal()
}

dependencies {

    implementation(libs.mybatisFlexCodegen)

    implementation(libs.flywaydbGradlePluginPublishing)

    implementation(libs.hikariCP)

    implementation(libs.snakeyaml)

    implementation(libs.freemarker)

    implementation(libs.commonsLang3)

    compileOnly(libs.lombok)

    testCompileOnly(libs.lombok)

    annotationProcessor(libs.lombok)

    testImplementation(libs.h2)

    testImplementation(libs.junitJupiter)

    testRuntimeOnly(libs.junitPlatformLauncher)
}

gradlePlugin {
    plugins {
        greeting {
            id = 'com.github.fengshch.mybatis-flex-gradle-plugin'
            implementationClass = 'com.github.fengshch.mybatis.MyBatisFlexGradlePlugin'
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)
configurations.functionalTestRuntimeOnly.extendsFrom(configurations.testRuntimeOnly)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    useJUnitPlatform()
}

gradlePlugin.testSourceSets.add(sourceSets.functionalTest)

tasks.named('check') {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}

tasks.named('test') {
    // Use JUnit Jupiter for unit tests.
    useJUnitPlatform()
}
java {
//    withJavadocJar()
    withSourcesJar()
}

compileJava {
    options.encoding = 'UTF-8'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

javadoc{
    options.encoding = 'UTF-8'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "mybatis-flex-gradle-plugin"
            from(components.java)
            versionMapping {
                usage("java-api") {
                    fromResolutionOf("runtimeClasspath")
                }
                usage("java-runtime") {
                    fromResolutionOf("runtimeClasspath")
                }
            }
        }
    }
}