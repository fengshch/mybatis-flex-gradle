/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.github.fengshch.mybatis;

import java.io.File;
import java.io.IOException;
import java.io.Writer;
import java.io.FileWriter;

import org.gradle.testkit.runner.GradleRunner;
import org.gradle.testkit.runner.BuildResult;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.io.TempDir;
import static org.junit.jupiter.api.Assertions.*;

/**
 * A simple functional test for the 'com.github.fengshch.mybatis.greeting' plugin.
 */
class MyBatisFlexGradlePluginFunctionalTest {
    @TempDir
    File projectDir;

    private File getBuildFile() {
        return new File(projectDir, "build.gradle");
    }

    private File getSettingsFile() {
        return new File(projectDir, "settings.gradle");
    }

    @Test void canRunTask() throws IOException {
        writeString(getSettingsFile(), "");
        String content = """
                        plugins {
                            id 'com.github.fengshch.mybatis-flex-gradle-plugin'
                        }
                   
                        mybatis{
                            configurations{
                                main {
                                    dataSourceConfig{
                                        driverClassName = 'org.postgresql.Driver'
                                        url = 'jdbc:postgresql://localhost:5432/postgres'
                                        username = 'postgres'
                                        password = '123456'
                                     }
                                    packageConfig{
                                        sourceDir ="src/main/java"
                                        basePackage = "com.example"
                                    }
                                }
                            }
                        }
                """;
        writeString(getBuildFile(), content);

        // Run the build
        GradleRunner runner = GradleRunner.create();
        runner.forwardOutput();
        runner.withPluginClasspath();
        runner.withArguments("tasks");
        runner.withProjectDir(projectDir);
        BuildResult result = runner.build();

        // Verify the result
        assertTrue(result.getOutput().contains("mybatisGenerate"));
    }

    private void writeString(File file, String string) throws IOException {
        try (Writer writer = new FileWriter(file)) {
            writer.write(string);
        }
    }
}
